

module search;

import java.lang.*;
import java.io.*;
import java.lang.String;
import java.util.*;




behavior Tfdif {
	
	private HashMap totalMap;

	public Tfdif()
	{
		totalMap = new HashMap();
	}

	public  int findTerm(HashMap mp, String term){
		int val =(int)mp.get(term);
		System.out.println(val);
		return val;
	}
	

	public void incTotalHashmap(HashMap docMap)
	{
		Iterator it = docMap.entrySet().iterator();
		while(it.hasNext()){
			Map.Entry pairs = (Map.Entry)it.next();
        	String word = (String)pairs.getKey();
        	Object o = totalMap.get(word);
			if(o != null)
			{
				totalMap.put(word, ((int)o)+(int)pairs.getValue());
			}
			else
			{
				totalMap.put(word, pairs.getValue());
			}
		}
		standardOutput<-println(totalMap.size());
	}

	public HashMap getMap()
	{
		return totalMap;
	}
	

	public  double tfidf(double tf, double idf){
		return tf*idf;
	}
	public double tf(int termFreq){
		if(termFreq >0)
			return 1+(Math.log10(termFreq));
		else{
			return 0;
		}
	}
	public double idf(int noDocs, int termInDoc){
		noDocs+=2;
		return Math.log10((noDocs)/(1+termInDoc));
	}


}