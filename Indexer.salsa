module search;

import java.lang.*;
import java.io.*;
import java.lang.String;
import java.util.*;




behavior Indexer {
	
	public void iterateHashmap(HashMap mp){
		Iterator it = mp.entrySet().iterator();
		while(it.hasNext()){
			Map.Entry pairs = (Map.Entry)it.next();
        	standardOutput<-println(pairs.getKey() + " = " + pairs.getValue());
		}
	}

	private int hashMapSize(Object o)
	{
		return ((HashMap)o).size();
	}

	private String strintcat(Object s1, Object s2)
	{
		return (String)s1+(Integer)s2;
	}

    public void act(String[] args) {
    	
    	Tfdif t = new Tfdif();
    	join
		{
			File[] files = new File("collection").listFiles();
			DocumentSearch ds = new DocumentSearch(files.length);
	   		for(int i =0; i < files.length; i++){
	   			Document d = new Document(files[i]);
				d<-wordFrequency() @
				ds<-storeDocMap(d,i) @
				d<-getMap() @
				d<-makeTreeMap(token) @
				d<-iterateTreeMap(token) @
				d<-getMap() @
				t<-incTotalHashmap(token);
				
			}
		} @ t<-getMap() 
		@hashMapSize(token) 
		@ strintcat("Final size: ", token)
		@ standardOutput<-println(token)
		@t<-getMap()
   		@ iterateHashmap(token)
   		@standardOutput<-println("WHAT THE BsITCH!");
    }
}

